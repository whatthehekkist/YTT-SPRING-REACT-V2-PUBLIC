import React, { createContext, useState, useEffect } from 'react';
import axios from 'axios';
import {
    Container,
    Accordion,
    Button,
} from 'react-bootstrap';


const Home = () => {

    const [randomDocs, setDocuments] = useState([]);
    const [loadingRandomDocs, setLoading] = useState(true);
    const [errorRandomDocs, setError] = useState(null);

    useEffect(() => {
        const fetchDocuments = async () => {
            try {
                const response = await axios.get('http://localhost:8888/randomdocs');
                console.log("Documents Response:", response.data);
                setDocuments(response.data);
            } catch (error) {
                console.error("Error fetching documents:", error);
                setError(error);
            } finally {
                setLoading(false);
            }
        };

        fetchDocuments();

    }, []);
    

    const [sampleDoc, setSampleDocuments] = useState([]);
    const [loadingSampleDoc, setLoadingSampleDoc] = useState(true);
    const [errorSampleDoc, setErrorSampleDoc] = useState(null);

    useEffect(() => {
        const fetchDocuments = async () => {
            try {
                const response = await axios.get('http://localhost:8888/sampledoc');
                // console.log("Documents Response:", response.data);
                setSampleDocuments(response.data);
            } catch (error) {
                console.error("Error fetching documents:", error);
                setLoadingSampleDoc(error);
            } finally {
                setErrorSampleDoc(false);
            }
        };

        fetchDocuments();

    }, []);


    return (
        <>
            <div>
                <h1>Random Documents List</h1>
                {randomDocs && randomDocs.length > 0 ? (
                    randomDocs.map((doc, index) => (
                        <div key={index}>
                            <Button variant="light" 
                                    className='m-1'
                                    
                            >
                                {doc.title}
                            </Button>
                        </div>
                    ))
                ) : (
                    <p>No random documents found.</p>
                )}
            </div>

            <Container className="bg-dark mt-5">
            {/* <h3 id="transcription" className='text-white text-center mb-3'>{sampleDoc && sampleDoc.title}</h3> */}
            {sampleDoc && sampleDoc.length > 0} ? ( 
                {sampleDoc.captionTracks.map((captionTrack, captionTracksIndex) => (
                    <Accordion defaultActiveKey="0" key={captionTracksIndex}>
                        <Accordion.Item className='mt-2'>
                            <Accordion.Header>{captionTrack.name}</Accordion.Header>
                            <Accordion.Body>
                                {captionTrack.script}
                            </Accordion.Body>
                        </Accordion.Item>
                    </Accordion>

                ))} )
                : ( <p>no document fetched.</p> )
            </Container>

        </>

    );

};

export default Home;