import React, { useContext } from 'react';
import { useNavigate } from 'react-router-dom';
import LoadingSpinner from '../components/Spinner';
import {
    Container,
    Accordion,
    Button,
} from 'react-bootstrap';

import { RandomDocumentsContext } from '../context/RandomDocContext';
import { SampleDocumentContext } from '../context/SampleDocContext';


const Home = () => {

    const history = useNavigate();
    const { randomDocs, loadingRandomDocs, errorRandomDocs } = useContext(RandomDocumentsContext);
    const { sampleDoc, loadingSampleDoc, errorSampleDoc } = useContext(SampleDocumentContext);
    // console.log("randomDocs:", randomDocs);
    // console.log("sampleDoc:", sampleDoc);

    if (loadingRandomDocs || loadingSampleDoc) return (<div><LoadingSpinner /></div>);
    if (errorRandomDocs) {
        return <div>Error fetching random documents: {errorRandomDocs.message}</div>;
    }
    if (errorSampleDoc) {
        return <div>Error fetching sample document: {errorSampleDoc.message}</div>;
    }

    // function to send a GET request of a doc 
    const fetchDocHandler = (id) => {   
        (id) ? history('/' + id) : alert("something went wrong..try again.");
    };

    return (
        <>
            <div>
                <h1>Random Documents List</h1>
                {randomDocs && randomDocs.length > 0 ? (
                    randomDocs.map((doc, index) => (
                        <div key={index}>
                            <Button variant="light" 
                                    className='m-1'
                                    onClick={ () => fetchDocHandler(doc.id) } 
                            >
                                {doc.title}
                            </Button>
                        </div>
                    ))
                ) : (
                    <p>No random documents found.</p>
                )}
            </div>

            <Container className="bg-dark mt-5">
                if ( sampleDoc && sampleDoc.length `{'>'}` 0 ) `{'{'}` {/* what the... f */}
                <h3 className='text-white text-center mb-3'>{sampleDoc.title}</h3>
                {sampleDoc.captionTracks.map((captionTrack, captionTracksIndex) => (

                    <Accordion defaultActiveKey="0" key={captionTracksIndex}>
                        <Accordion.Item className='mt-2'>
                            <Accordion.Header>{captionTrack.name}</Accordion.Header>
                            <Accordion.Body>
                                {captionTrack.script}
                            </Accordion.Body>
                        </Accordion.Item>
                    </Accordion>
                ))}

                `{'}'}` else <p>no sample document fetched.</p>
            </Container>

            {/* working with less validation */}
            {/* <Container className="bg-dark mt-5 pt-5 pb-5">
            <h3 className='text-white text-center'>{sampleDoc.title}</h3>
            {sampleDoc.captionTracks.map((captionTrack, captionTracksIndex) => (
                
                <Accordion defaultActiveKey="0" key={captionTracksIndex}>
                    <Accordion.Item className='mt-2'>
                    <Accordion.Header>{captionTrack.name}</Accordion.Header>
                    <Accordion.Body>
                        {captionTrack.script}
                    </Accordion.Body>
                    </Accordion.Item>
                </Accordion>
            ))}
            </Container> */}
        </>

    );

};

export default Home;