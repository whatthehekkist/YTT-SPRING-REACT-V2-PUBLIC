plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// implementation 'ch.qos.logback:logback-classic'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

/*********************************/
// create jar in custom path
/*bootJar{
	destinationDirectory = file("./target") // JAR file path on gradle build
	archivesBaseName = 'ytt'   // project name
	archiveFileName = 'ytt.jar' // jar file name
	// archiveVersion = "0.0.1"
}*/


/*********************************/
// [build/libs] prevent creating -plain.jar
jar {
	enabled = false
}

/*********************************/
// spring react integration build
// https://chrismare.tistory.com/m/entry/SpringBoot-React-%EC%97%B0%EB%8F%995-%EC%A4%91%EA%B0%84-%EB%B0%B0%ED%8F%AC%EB%A1%9C-%ED%85%8C%EC%8A%A4%ED%8A%B8

// localhost: react build will be done by this code
// web deploy: build -> comment out all below -> commit to git -> deploy on heroku or koyeb THEN
def frontendDir = "$projectDir/src/main/frontend"

sourceSets {
	main {
		resources { srcDirs = ["$projectDir/src/main/resources"]
		}
	}
}

processResources { dependsOn "copyReactBuildFiles" }

tasks.register('installReact', Exec) {
	workingDir "$frontendDir"
	inputs.dir "$frontendDir"
	group = BasePlugin.BUILD_GROUP
	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
		commandLine "npm.cmd", "audit", "fix"
		commandLine 'npm.cmd', 'install'
	} else {
		commandLine "npm", "audit", "fix" commandLine 'npm', 'install'
	}
}

tasks.register('buildReact', Exec) {
	dependsOn "installReact"
	workingDir "$frontendDir"
	inputs.dir "$frontendDir"
	group = BasePlugin.BUILD_GROUP
	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
		commandLine "npm.cmd", "run-script", "build"
	} else {
		commandLine "npm", "run-script", "build"
	}
}

tasks.register('copyReactBuildFiles', Copy) {
	dependsOn "buildReact"
	from "$frontendDir/build"
	into "$projectDir/src/main/resources/static"
}























// #####################################################
// [way2] spring react integration build

//https://keembloo.tistory.com/112
/*
// ---------------------------------------- 리액트(빌드) 통합 ---------------------------------------- //
// * 터미널에서 리액트 실행하지 않고 gradle이 리액트를 빌드해서 빌드된 파일을 스프링쪽으로 이동
// 1. 리액트 코드 파일이 있는 리액트 프로젝트 폴더 경로 정의
def frontendDir = "$projectDir/src/main/frontend"	// $projectDir/src/main/{리액트프로젝트명}
// $projectDir : 현재 build.gradle 프로젝트의 위치
// 2. 리액트 코드파일을 빌드해서 빌드된 파일을 어디로 이동할지 .. 정의
sourceSets {
	main {
		resources { srcDirs = ["$projectDir/src/main/resources"]
		}
	}
}
// 3. 이동[ 원본이동X , 복사이동O ]
processResources { dependsOn "copyReactBuildFiles" }
// 4. [1]리액트 설치 [ 리액트 라이브러리 없으면 npm update 자동으로 해주고 있으면 npm update X ]
task installReact(type: Exec) {
	workingDir "$frontendDir"	 // 리액트코드가 있는 폴더경로
	inputs.dir "$frontendDir"	// 빌드 했을때 저장할 폴더경로
	group = BasePlugin.BUILD_GROUP
	// npm 호출   [ 운영체제 별로 명령어 다름 ] = 강의 기준 : 개발(윈도우) / 배포(리눅스)
	// 1. 운영체제가 window 환경이면
	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
		commandLine "npm.cmd", "audit", "fix"
		commandLine 'npm.cmd', 'install' }
	else {	// 운영체제가 window가 아니면
		commandLine "npm", "audit", "fix" commandLine 'npm', 'install'
	}
}

// 5. [2]리액트 빌드
task buildReact(type: Exec) {
	dependsOn "installReact"
	workingDir "$frontendDir"	// 리액트코드가 있는 폴더경로
	inputs.dir "$frontendDir"	// 빌드 했을때 저장할 폴더경로
	group = BasePlugin.BUILD_GROUP
	// npm 호출   [ 운영체제 별로 명령어 다름 ] = 강의 기준 : 개발(윈도우) / 배포(리눅스)
	// 1. 운영체제가 window 환경이면
	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
		commandLine "npm.cmd", "run-script", "build"
	} else {		// 운영체제가 window가 아니면
		commandLine "npm", "run-script", "build"
	}
}

// 6. [3]리액트 빌드파일 복사    [ 빌드된 파일은 git에 커밋X ]
task copyReactBuildFiles(type: Copy) {
	dependsOn "buildReact"
	from "$frontendDir/build"	// 복사할 파일이 어디에서
	into "$projectDir/src/main/resources/static"	// 복사할 파일을 어디로
}
*/